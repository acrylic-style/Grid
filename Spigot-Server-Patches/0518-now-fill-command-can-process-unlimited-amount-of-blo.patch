From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Fri, 1 May 2020 23:10:44 +0900
Subject: [PATCH] now /fill command can process unlimited amount of blocks +
 async


diff --git a/src/main/java/net/minecraft/server/CommandFill.java b/src/main/java/net/minecraft/server/CommandFill.java
index 4847905a5f6a329419c770dd0570f1e04ec72732..8b4cc86ed87d5254ae6fa35225a1c777855d08ee 100644
--- a/src/main/java/net/minecraft/server/CommandFill.java
+++ b/src/main/java/net/minecraft/server/CommandFill.java
@@ -45,20 +45,23 @@ public class CommandFill {
     }
 
     private static int a(CommandListenerWrapper commandlistenerwrapper, StructureBoundingBox structureboundingbox, ArgumentTileLocation argumenttilelocation, CommandFill.Mode commandfill_mode, @Nullable Predicate<ShapeDetectorBlock> predicate) throws CommandSyntaxException {
-        int i = structureboundingbox.c() * structureboundingbox.d() * structureboundingbox.e();
-
-        if (i > 32768) {
-            throw CommandFill.a.create(32768, i);
-        } else {
+        // Paper start - let /fill command fills unlimited blocks and process blocks async
+        // int i = structureboundingbox.c() * structureboundingbox.d() * structureboundingbox.e();
+
+        //if (i > 32768) {
+        //    throw CommandFill.a.create(32768, i);
+        //} else {
+        new Thread(() -> {
+            org.spigotmc.AsyncCatcher.enabled = false;
             List<BlockPosition> list = Lists.newArrayList();
             WorldServer worldserver = commandlistenerwrapper.getWorld();
             int j = 0;
-            Iterator iterator = BlockPosition.b(structureboundingbox.a, structureboundingbox.b, structureboundingbox.c, structureboundingbox.d, structureboundingbox.e, structureboundingbox.f).iterator();
+            Iterator<BlockPosition> iterator = BlockPosition.b(structureboundingbox.a, structureboundingbox.b, structureboundingbox.c, structureboundingbox.d, structureboundingbox.e, structureboundingbox.f).iterator();
 
             BlockPosition blockposition;
 
             while (iterator.hasNext()) {
-                blockposition = (BlockPosition) iterator.next();
+                blockposition = iterator.next();
                 if (predicate == null || predicate.test(new ShapeDetectorBlock(worldserver, blockposition, true))) {
                     ArgumentTileLocation argumenttilelocation1 = commandfill_mode.e.filter(structureboundingbox, blockposition, argumenttilelocation, worldserver);
 
@@ -77,19 +80,22 @@ public class CommandFill {
             iterator = list.iterator();
 
             while (iterator.hasNext()) {
-                blockposition = (BlockPosition) iterator.next();
+                blockposition = iterator.next();
                 Block block = worldserver.getType(blockposition).getBlock();
 
                 worldserver.update(blockposition, block);
             }
 
             if (j == 0) {
-                throw CommandFill.c.create();
+                commandlistenerwrapper.sendFailureMessage(new ChatMessage("commands.fill.failed", new Object[0]));
             } else {
                 commandlistenerwrapper.sendMessage(new ChatMessage("commands.fill.success", new Object[]{j}), true);
-                return j;
             }
-        }
+            org.spigotmc.AsyncCatcher.enabled = true;
+        }).start();
+        //}
+        return 0;
+        // Paper end
     }
 
     static enum Mode {
