From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Sun, 24 May 2020 21:55:27 +0900
Subject: [PATCH] chunk loading with timeouts, probably prevents server
 watchdog timeout crash.


diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 561b42472261a973fea6344d76ca7ea1993aee27..0b4c28fc1b6835ae13bd0aa4444293db890cc663 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -1202,11 +1202,29 @@ public abstract class World implements GeneratorAccess, AutoCloseable {
 
         for (int i1 = i; i1 <= j; ++i1) {
             for (int j1 = k; j1 <= l; ++j1) {
-                Chunk chunk = chunkProvider.getChunkAtIfLoadedMainThread(i1, j1);
-
-                if (chunk != null) {
-                    chunk.getHardCollidingEntities(entity, axisalignedbb, list);
+                // Paper start - timed chunk loading
+                int finalI = i1;
+                int finalJ = j1;
+                try {
+                    java.util.concurrent.CompletableFuture
+                        .supplyAsync(() -> chunkProvider.getChunkAtIfLoadedMainThread(finalI, finalJ))
+                        .thenAcceptAsync((ch) -> {
+                            if (ch != null) ch.getHardCollidingEntities(entity, axisalignedbb, list);
+                        }).get(5, java.util.concurrent.TimeUnit.SECONDS);
+                } catch (InterruptedException e) {
+                    LOGGER.error("Async chunk operation was interrupted!");
+                    LOGGER.error("Tried to get chunk at " + i1 + ", " + j1);
+                    e.printStackTrace();
+                } catch (java.util.concurrent.ExecutionException e) {
+                    LOGGER.error("Async chunk operation threw exception!");
+                    LOGGER.error("Tried to get chunk at " + i1 + ", " + j1);
+                    e.getCause().printStackTrace();
+                } catch (java.util.concurrent.TimeoutException e) {
+                    LOGGER.error("Timed out the async chunk operation!");
+                    LOGGER.error("Tried to get chunk at " + i1 + ", " + j1);
+                    e.printStackTrace();
                 }
+                // Paper end - timed chunk loading
             }
         }
 
