From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: acrylic-style <me@acrylicstyle.xyz>
Date: Thu, 30 Apr 2020 21:32:59 +0900
Subject: [PATCH] Fix MC-126244


diff --git a/src/main/java/net/minecraft/server/CommandLocate.java b/src/main/java/net/minecraft/server/CommandLocate.java
index b500ef0b642515d0a9b65dbf10908493282182d2..d8f592b79a55801e93c3357b353fa89f325e7d28 100644
--- a/src/main/java/net/minecraft/server/CommandLocate.java
+++ b/src/main/java/net/minecraft/server/CommandLocate.java
@@ -46,20 +46,25 @@ public class CommandLocate {
     }
 
     private static int a(CommandListenerWrapper commandlistenerwrapper, String s) throws CommandSyntaxException {
-        BlockPosition blockposition = new BlockPosition(commandlistenerwrapper.getPosition());
-        BlockPosition blockposition1 = commandlistenerwrapper.getWorld().a(s, blockposition, 100, false);
+        // Paper start - async /locate to prevent huge lags
+        new Thread(() -> {
+            BlockPosition blockposition = new BlockPosition(commandlistenerwrapper.getPosition());
+            BlockPosition blockposition1 = commandlistenerwrapper.getWorld().a(s, blockposition, 100, false);
 
-        if (blockposition1 == null) {
-            throw CommandLocate.a.create();
-        } else {
-            int i = MathHelper.d(a(blockposition.getX(), blockposition.getZ(), blockposition1.getX(), blockposition1.getZ()));
-            IChatBaseComponent ichatbasecomponent = ChatComponentUtils.a((IChatBaseComponent) (new ChatMessage("chat.coordinates", new Object[]{blockposition1.getX(), "~", blockposition1.getZ()}))).a((chatmodifier) -> {
-                chatmodifier.setColor(EnumChatFormat.GREEN).setChatClickable(new ChatClickable(ChatClickable.EnumClickAction.SUGGEST_COMMAND, "/tp @s " + blockposition1.getX() + " ~ " + blockposition1.getZ())).setChatHoverable(new ChatHoverable(ChatHoverable.EnumHoverAction.SHOW_TEXT, new ChatMessage("chat.coordinates.tooltip", new Object[0])));
-            });
+            if (blockposition1 == null) {
+                commandlistenerwrapper.sendFailureMessage(new ChatMessage("commands.locate.failed", new Object[0]));
+            } else {
+                int i = MathHelper.d(a(blockposition.getX(), blockposition.getZ(), blockposition1.getX(), blockposition1.getZ()));
+                IChatBaseComponent ichatbasecomponent = ChatComponentUtils.a((IChatBaseComponent) (new ChatMessage("chat.coordinates", new Object[]{blockposition1.getX(), "~", blockposition1.getZ()}))).a((chatmodifier) -> {
+                    chatmodifier.setColor(EnumChatFormat.GREEN).setChatClickable(new ChatClickable(ChatClickable.EnumClickAction.SUGGEST_COMMAND, "/tp @s " + blockposition1.getX() + " ~ " + blockposition1.getZ())).setChatHoverable(new ChatHoverable(ChatHoverable.EnumHoverAction.SHOW_TEXT, new ChatMessage("chat.coordinates.tooltip", new Object[0])));
+                });
 
-            commandlistenerwrapper.sendMessage(new ChatMessage("commands.locate.success", new Object[]{s, ichatbasecomponent, i}), false);
-            return i;
-        }
+                commandlistenerwrapper.sendMessage(new ChatMessage("commands.locate.success", new Object[]{s, ichatbasecomponent, i}), false);
+                // return i;
+            }
+        }).start();
+        return 0;
+        // Paper end
     }
 
     private static float a(int i, int j, int k, int l) {
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 7eed0a60ed78864a615f2844a0736a3ef8413ecc..b5eb69b26327e4f796ea1a822c07fe3efdea0dba 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -347,8 +347,11 @@ public abstract class EntityArrow extends Entity implements IProjectile {
         }
 
         if (this.isCritical()) {
+            // Paper start - Fix MC-181313
             int bound = i / 2 + 2;
-            i += this.random.nextInt(bound < 0 ? Integer.MAX_VALUE : bound); // Paper - Fixes MC-181313
+            i += this.random.nextInt(bound < 0 ? Integer.MAX_VALUE : bound);
+            if (i < 0) i = Integer.MAX_VALUE; // if 'i' has overflow'd then fallback to max value of integer.
+            // Paper end
         }
 
         Entity entity1 = this.getShooter();
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 4e64d5b47de5da1318b8266646bc7a353ee7252e..557b1fce82928e88796b6b9ce45d6a9b361b908d 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -201,8 +201,7 @@ import org.yaml.snakeyaml.constructor.SafeConstructor;
 import org.yaml.snakeyaml.error.MarkedYAMLException;
 
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
-import xyz.acrylicstyle.paper.event.server.ServerPreReloadEvent;
-import xyz.acrylicstyle.paper.event.server.ServerReloadedEvent;
+import xyz.acrylicstyle.paper.event.server.ServerReloadedEvent; // Paper
 
 import javax.annotation.Nullable; // Paper
 import javax.annotation.Nonnull; // Paper
